import h5py
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
mpl = plt.matplotlib 
import matplotlib.dates as mdates
from datetime import datetime, timedelta
from astropy.time import Time
from barycorrpy import get_BC_vel, exposure_meter_BC_vel

#GRASS_rv: RV calculated from line profiles + granulation affects on
#GRASS_no_cb: RV calculated from line profiles + granulation affects off
#RV_list_no_cb: RV calculated form weighted projected velocities + no extra CB
#RV_list_cb: RV calculated form weighted projected velocities + with extra CB

GRASS_rv = [-988.5648555033229, -988.9318152940725, -990.6844776572767, -987.5287138611862, -986.3617787440236, -988.3634704533989, -982.6352134344874, -984.9851973476927, -986.1167015706944, -987.5433552910207, -984.7377695576516, -980.1974827808243, -985.4487230044178, -980.6451989835688, -984.2026333803941, -984.0839766320627, -982.1178808919543, -980.2253063850875, -981.3174051960153, -980.0139358289507, -980.886421013147, -980.1957771011386, -976.8047343725772, -975.9931352599821, -973.1935287525198, -974.0257033963295, -971.1727969024736, -973.0962248289476, -970.2998404910957, -968.9402886035529, -967.8491208161917, -965.4898868812709, -966.5003169680791, -968.2620324270541, -962.4107609028232, -966.3076847104794, -962.1874144501156, -960.2486849427027, -961.4345040022378, -961.2572878649679, -960.0417190185783, -957.7769348819259, -962.2706322180697, -959.5027825510831, -960.1688273552427, -955.2957711663403, -957.6128131530014, -1148.4168055462148, -1165.3676191659538, -1183.358210355167, -1206.3559469045258, -1230.7011558349323, -1245.4984619140412, -1275.6125693376055, -1290.0728997827953, -1311.6372313736963, -1335.6507888457604, -1360.2641745589847, -1378.9103690594216, -1403.3630755933232, -1425.6067788651585, -1454.4425028537842, -1470.3256016630694, -1491.4443880793435, -1512.5686199541462, -1537.0415575577667, -1556.4851131829364, -1580.3995370226708, -1599.880291477655, -1621.4206218396753, -1635.4449267280322, -1660.716205476253, -1677.5681422723733, -1689.421709564745, -1712.3878677927212, -1723.2929876260405, -1737.1549559193145, -1743.3487237913307, -1741.5063357359863, -1745.8752907169685, -1734.193515771895, -1713.9514078160698, -1696.0279667955808, -1654.5976746378465, -1611.5891216469004, -1545.8542932436956, -1460.9216692630794, -1359.3506963380967, -1246.408169833057, -1124.0732544533375, -989.2201163182601, -710.3405778950811, -611.3154053870292, -508.46453630915136, -419.45662717462756, -355.6483767593881, -296.20998563450985, -242.5585667662413, -209.86930898116458, -180.20684099049083, -162.43161316895385, -146.12117631531527, -139.2108849010982, -133.44890365006418, -138.5291138446397, -135.2036424779573, -148.8287812986053, -150.70338886046957, -153.70099320482186, -168.62285039515257, -181.29080897673745, -188.70708406245632, -208.21844595615403, -219.51503656442284, -233.11408556335516, -249.76341270375266, -267.39951594579776, -284.01106340895694, -296.4461195517043, -309.90770429376835, -331.1093030068014, -345.1622818378765, -359.1653093048414, -378.6501818652174, -386.0249549802146, -412.8597688612395, -428.80508987873355, -444.12026790702157, -648.1691143176052, -648.0001095687492, -644.7773410074756, -645.2241362357328, -642.7821741623089, -638.9822786102992, -633.7442201559002, -636.0943407971021, -628.9516088156915, -624.3608944097624, -624.6986567431775, -623.2455737379415, -619.2634902869034, -618.4578935865401, -614.3256233603213, -613.8143190185167, -480.55199992361537, -318.2480724717284, -318.7728948984342, -318.5644311199441]
GRASS_no_cb = [-842.4680359996895, -842.1259204396638, -841.779549990037, -841.3941947038037, -840.9861797344381, -840.6268355451723, -840.2161382588909, -839.8077689099599, -839.3860666267916, -838.9082392336031, -838.4599273873525, -838.0109811344695, -837.5250899030447, -837.0517999520557, -836.5329787926264, -836.0220864991852, -835.5039680593701, -834.9514881746497, -834.3800014375139, -833.8069525692493, -833.2520555463553, -832.8337468433074, -830.5364975740665, -830.2244285005199, -828.6112706863885, -828.4830358481893, -827.5237894002408, -826.8193857673045, -823.7525134754096, -823.1572550074685, -822.3936566119609, -821.6136159785278, -820.826951942258, -820.0335206210875, -819.2180850223923, -818.3794852185697, -817.5957480193334, -816.7217429462443, -815.8751445207799, -814.9913414004045, -814.0545797232736, -813.2037871788266, -812.2916928786703, -811.3622594016118, -810.4198617796749, -809.499791418393, -808.8534777648445, -1001.8580726995959, -1017.1279084811837, -1035.9617253495715, -1057.6375072259154, -1077.3180036429128, -1094.1929901729577, -1122.3547909499875, -1146.3258234611283, -1168.8778176138833, -1190.973712804704, -1213.375967392795, -1235.6766599774228, -1257.8352679196425, -1281.0360910756797, -1305.1370638890905, -1327.0572516183236, -1349.5447805637646, -1372.6536046715323, -1395.5836783019956, -1417.1132281006815, -1438.7294491152495, -1460.1431799072013, -1481.7828471917478, -1502.0853208977105, -1521.3815694167997, -1540.8866332434645, -1557.9775314662274, -1574.0134067137599, -1587.5509382152293, -1603.1898230241961, -1611.6696453545349, -1616.5016846055496, -1616.292364176246, -1610.007089786353, -1593.6908784660877, -1569.6937499756789, -1535.0952231923045, -1487.192596421965, -1422.0305721903812, -1337.9456949574044, -1238.203648514141, -1120.4470281536248, -993.9363811101989, -862.3003033191228, -586.3639762484843, -484.8716528056107, -379.2144701307007, -297.6638779517859, -223.9774390994863, -173.50293889977584, -116.4093606664802, -83.56795114152237, -54.2286662665498, -35.18748500720337, -19.601415853840646, -10.09834487898808, -5.090372257301634, -3.1356827068545945, -4.401803223914921, -8.12435811903651, -13.84406255629208, -21.326454016255987, -30.675556705250614, -41.17716510728241, -52.78880664351887, -65.53956934828962, -79.42443533032609, -92.9756005214331, -107.17623485324036, -121.7719257422761, -136.58770068586557, -151.89266641112178, -168.0190665965255, -183.516106099109, -199.21996914021315, -215.56729045712328, -231.2763541397963, -246.63387015890694, -262.85976796399905, -278.44032842452793, -291.19643536214403, -502.5064417165233, -501.152585408336, -499.0951033010262, -497.0203972735444, -494.9770326693482, -492.8829297324265, -490.77692371757576, -489.1736401802434, -481.57289147157184, -480.47096005549383, -478.3176983248443, -476.3653916092662, -474.25263357971284, -472.22632309377974, -470.20758050407795, -468.0777257477965, -333.6195161768059, -174.87105199312163, -174.25173083043225, -173.42820702263685]

#read in data
#model
file = h5py.File("data/model_data.jld2", "r")
RV_list_no_cb = file["RV_list_no_cb"][()]
RV_list_cb  = file["RV_list_cb"][()]
intensity_list = file["intensity_list"][()]
#data 
data_time = np.loadtxt("data/Boulder_Data_bin.txt")[:, 0]
data_rv = np.loadtxt("data/Boulder_Data_bin.txt")[:, 1] * (1.565*10**(-6))
time_stamps_data = []
time_julian = []
for i in data_time:
    dt = datetime.fromtimestamp(i) + timedelta(hours=4)
    time_stamps_data.append(dt)
    time_julian.append((Time(dt)).jd)

vb, warnings, flag = get_BC_vel(JDUTC=time_julian, lat=39.995380 , longi=-105.262390 , alt=165.23, SolSystemTarget='Sun', predictive=False,zmeas=0.0)

data_rv = np.array(data_rv)
data_rv -= data_rv[-1]

GRASS_rv = np.array(GRASS_rv + vb)
GRASS_rv -= GRASS_rv[-1]

GRASS_no_cb = np.array(GRASS_no_cb + vb)
GRASS_no_cb -= GRASS_no_cb[-1]

RV_list_no_cb = np.array(RV_list_no_cb + vb)
RV_list_no_cb -= RV_list_no_cb[-1]

RV_list_cb = np.array(RV_list_cb + vb)
RV_list_cb -= RV_list_cb[-1]

#rm curve 
fig, axs = plt.subplots(2, sharex=True, sharey=False, gridspec_kw={'hspace': 0, 'height_ratios': [3, 1]})
axs[0].scatter(time_stamps_data[47:-20], data_rv[47:-20], color = 'k', marker = "x", s = 18, label = "Heterodyne RVs") 
axs[0].plot(time_stamps_data[47:-20], RV_list_no_cb[47:-20], color = 'r', linewidth = 2, label = "Weighted RVs - No CB")
axs[0].plot(time_stamps_data[47:-20], GRASS_no_cb[47:-20], color = 'b', linewidth = 3, label = "Line RVs - No CB")
axs[0].xaxis.set_major_formatter(mdates.DateFormatter("%H:%M"))
axs[0].set_xlabel("Time (UTC)", fontsize=12)
axs[0].set_ylabel("RV [m/s]", fontsize=12)
rms_model_no_cb = round(np.sqrt((np.nansum((data_rv[47:-20] - RV_list_no_cb[47:-20])**2))/len(data_rv[47:-20] - RV_list_no_cb[47:-20])),2)
axs[0].text(time_stamps_data[47:-20][-38], -400, "Weighted RVs - No CB RMS {}".format(rms_model_no_cb))
rms_grass_no_cb = round(np.sqrt((np.nansum((data_rv[47:-20] - GRASS_no_cb[47:-20])**2))/len(data_rv[47:-20] - GRASS_no_cb[47:-20])),2)
axs[0].text(time_stamps_data[47:-20][-38], -500, "Line RVs - No CB RMS {}".format(rms_grass_no_cb))
axs[0].legend(fontsize=12)
plt.xticks(fontsize=12)
plt.yticks(fontsize=12)
#residuals
axs[1].scatter(time_stamps_data[47:-20], (data_rv[47:-20]) - RV_list_no_cb[47:-20], color = 'r', marker = "x", s = 3) 
axs[1].scatter(time_stamps_data[47:-20], (data_rv[47:-20]) - GRASS_no_cb[47:-20], color = 'b', marker = "x", s = 3)  
axs[1].xaxis.set_major_formatter(mdates.DateFormatter("%H:%M"))
axs[1].set_xlabel("Time (UTC)", fontsize=12)
axs[1].set_ylabel("Residuals", fontsize=12) 
plt.xticks(fontsize=12)
plt.yticks(fontsize=12)
plt.savefig("rm_and_residuals.png")
plt.show()

#rm curve 
fig, axs = plt.subplots(2, sharex=True, sharey=False, gridspec_kw={'hspace': 0, 'height_ratios': [3, 1]})
axs[0].scatter(time_stamps_data[47:-20], data_rv[47:-20], color = 'k', marker = "x", s = 18, label = "Heterodyne RVs") 
axs[0].plot(time_stamps_data[47:-20], RV_list_cb[47:-20], color = 'r', linewidth = 3, label = "Weighted RVs - CB")
axs[0].plot(time_stamps_data[47:-20], GRASS_rv[47:-20], color = 'b', linewidth = 3, label = "GRASS")
axs[0].xaxis.set_major_formatter(mdates.DateFormatter("%H:%M"))
axs[0].set_xlabel("Time (UTC)", fontsize=12)
axs[0].set_ylabel("RV [m/s]", fontsize=12)
rms_model_cb = round(np.sqrt((np.nansum((data_rv[47:-20] - RV_list_cb[47:-20])**2))/len(data_rv[47:-20] - RV_list_cb[47:-20])),2)
axs[0].text(time_stamps_data[47:-20][-38], -400, "Weighted RVs - CB RMS {}".format(rms_model_cb))
rms_grass_no_cb = round(np.sqrt((np.nansum((data_rv[47:-20] - GRASS_rv[47:-20])**2))/len(data_rv[47:-20] - GRASS_rv[47:-20])),2)
axs[0].text(time_stamps_data[47:-20][-38], -500, "GRASS RMS {}".format(rms_grass_no_cb))
axs[0].legend(fontsize=12)
plt.xticks(fontsize=12)
plt.yticks(fontsize=12)
#residuals
axs[1].scatter(time_stamps_data[47:-20], (data_rv[47:-20]) - RV_list_cb[47:-20], color = 'k', marker = "x", s = 3) 
axs[1].scatter(time_stamps_data[47:-20], (data_rv[47:-20]) - GRASS_rv[47:-20], color = 'b', marker = "x", s = 3)  
axs[1].xaxis.set_major_formatter(mdates.DateFormatter("%H:%M"))
axs[1].set_xlabel("Time (UTC)", fontsize=12)
axs[1].set_ylabel("Residuals", fontsize=12) 
plt.xticks(fontsize=12)
plt.yticks(fontsize=12)
plt.savefig("rm_and_residuals_cb.png")
plt.show()