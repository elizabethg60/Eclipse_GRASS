import h5py
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
mpl = plt.matplotlib 
import matplotlib.dates as mdates
from datetime import datetime, timedelta
from astropy.time import Time
from barycorrpy import get_BC_vel, exposure_meter_BC_vel

#GRASS_rv: RV calculated from line profiles + granulation affects on
#GRASS_no_cb: RV calculated from line profiles + granulation affects off
#RV_list_no_cb: RV calculated form weighted projected velocities + no extra CB
#RV_list_cb: RV calculated form weighted projected velocities + with extra CB

GRASS_rv = [-905.0789838155201, -905.4383528134326, -904.1163377799116, -904.030487133844, -904.5189282359136, -903.1889534176825, -902.1959608174615, -902.8677394727848, -902.5105784436604, -901.3875875672989, -900.339080824378, -900.434300171267, -900.2845782147912, -899.5157303465794, -899.0347671283916, -898.8061544392522, -898.5666642379107, -896.5224664412013, -896.9205338104941, -896.642943419355, -895.0359590153183, -895.2668519222323, -894.06536246506, -894.2523414924416, -891.5953161696962, -892.409895902012, -890.6755302572769, -890.7545242606986, -887.4485252629935, -887.1873840087227, -885.7887014392697, -885.2951434749925, -884.3005363113434, -883.3407697804665, -882.9701266831172, -882.7764382807796, -881.0117386434341, -879.7264231849352, -879.0421811265868, -878.202227346656, -877.928442220102, -876.2011810367662, -875.0463817759883, -875.313627465356, -873.6724316649183, -872.7969500483409, -872.0141898628588, -1128.9821734553645, -1144.2174273844432, -1164.556878893371, -1186.727707903604, -1207.3736152791878, -1223.1840871132902, -1249.6783965885343, -1268.1995237441215, -1288.9729392114682, -1308.465840436761, -1328.5494249690942, -1348.3717237727162, -1367.5778418103505, -1386.8066676050375, -1405.8411186790404, -1425.0472854970405, -1443.3146644836079, -1463.7663032595244, -1483.235794586414, -1500.1526892006814, -1518.0668671227997, -1537.643664038658, -1554.8192240510584, -1573.4424200159137, -1589.5006162595748, -1606.5565601784172, -1623.1369917544905, -1634.916205195194, -1649.627644144613, -1658.3376700369256, -1668.0543520004726, -1671.7205405702698, -1673.1945630653606, -1669.8781433284676, -1658.9365576070602, -1639.5803831192468, -1610.8521409702635, -1566.8401129142205, -1508.3282703813252, -1433.923806403921, -1333.7252970875877, -1219.875767209746, -1089.5527414951098, -950.7069846347002, -655.8383779316922, -544.3211451808249, -427.1093292134142, -337.2650989225389, -255.8259488441981, -199.45364301085965, -134.88216277937292, -100.73885478089343, -68.58991909655204, -47.66068828607157, -31.627309718183074, -20.360719039037395, -14.453567532196686, -10.65552746287885, -11.099528364330848, -14.87751252514081, -19.81388864131966, -24.442138838748708, -35.742808332732494, -44.172951873218736, -55.34807074780648, -66.65593444432027, -76.71539200039298, -88.89729760380092, -101.73885772574108, -114.35203897807598, -128.50725988094516, -140.97413145206974, -154.63434888205228, -169.96620731127283, -183.42755754419045, -198.39205847325715, -211.85310026433743, -228.1206998150354, -243.0006818307153, -257.6798921194857, -270.6952503494236, -568.1559217044833, -567.4449797964161, -564.3390708952679, -562.791601227354, -560.5747972735738, -559.2953059028407, -556.0884420470487, -554.0223887470015, -547.3860029081465, -545.6727006069568, -543.460697998634, -542.5289508975385, -540.2024420341783, -536.697677801317, -534.9062067868989, -532.2898750708598, -395.3144539733176, -240.90529278905004, -240.37544291184744, -238.73492934273597]
GRASS_no_cb = [-946.3983022992252, -947.2816919126695, -947.0080056658404, -947.7710647238614, -945.8336374385664, -946.3210150724293, -945.5550589667038, -943.8888671858168, -944.6012583109987, -943.4520046204295, -942.9242478669694, -943.1139983319592, -941.91104070805, -942.124016463617, -941.0014602849153, -941.0385305317051, -939.4261923481798, -939.001766824117, -938.1829724211672, -937.960829060767, -937.5154508472184, -936.7383524372465, -934.6137035290312, -934.6292948484012, -931.3098503720521, -932.1217762218312, -930.8580167390992, -930.4172089089145, -926.9073616927238, -926.8681261379077, -925.641607603222, -925.9247134114912, -923.9480380379288, -922.7174913903677, -922.4673001184422, -920.8157970984882, -920.1555153122806, -919.4828219155844, -919.1960918419766, -917.6347420145482, -916.1144492168329, -915.8615568358334, -915.2724929983666, -914.3831089935243, -914.5830409300969, -912.5094563785282, -912.15424306283, -1183.8485951563891, -1199.7624626325987, -1218.2291092539497, -1241.3934380990793, -1256.6111720652011, -1273.9369521354402, -1299.2818274011047, -1317.1490818537936, -1336.1206243945205, -1354.7987020170933, -1372.4220836582708, -1392.3277530598143, -1409.955293524214, -1427.8348891381866, -1445.368239906861, -1462.9393471901815, -1479.5441786579806, -1498.586380761129, -1512.7032549600422, -1531.0421444890922, -1547.002948857668, -1562.9432503511227, -1578.1231446129177, -1591.9146115443261, -1605.2297412036655, -1617.7595272620497, -1631.0411124657296, -1642.1568075421878, -1650.827927456329, -1656.6343743061273, -1660.7097690448388, -1662.6755503408806, -1660.3054864807098, -1654.3967508733706, -1644.6799092005238, -1627.5307235039515, -1596.5083494130147, -1555.7354465238532, -1497.6296684314661, -1421.8552271661636, -1328.2073564267466, -1213.778482031352, -1085.74264330544, -951.3518088147049, -661.2071494691788, -550.2113835032277, -433.9093723577582, -341.5917111299484, -263.1723028804818, -204.9303633319204, -140.86813929200986, -107.692429322355, -78.6949344976237, -60.349795803270666, -45.32719304509913, -38.94822894582116, -36.29046178874899, -37.25539412386679, -40.54274228251671, -47.36014673591172, -55.18218543610577, -64.30187259023313, -74.21988335716593, -85.69771577335635, -98.53749698835567, -111.30488495522022, -122.77705753101434, -135.23012027502995, -150.5452788226344, -163.99065935192527, -177.7698004509939, -192.62291612710257, -207.05839547544912, -220.54748038084642, -237.63019368583684, -251.9349843499202, -266.5850835436629, -280.7769220131828, -298.394843455909, -312.58851912559135, -325.18643576900814, -607.9690404709302, -606.8515053965785, -604.1182990105423, -603.2702935127274, -600.3137585775121, -598.6548494034791, -595.8727418090182, -594.2636632369378, -587.7594341887029, -587.1067169939441, -585.4211271666982, -582.6551368264601, -580.4796352364663, -578.8715330652977, -575.8512910565328, -575.0529801800382, -436.8067434868682, -280.8869209248273, -281.52428973582255, -280.8933995159078]

#read in data
#model
file = h5py.File("data/model_data.jld2", "r")
RV_list_no_cb = file["RV_list_no_cb"][()]
RV_list_cb  = file["RV_list_cb"][()]
intensity_list = file["intensity_list"][()]
#data 
data_time = np.loadtxt("data/Boulder_Data_bin.txt")[:, 0]
data_rv = np.loadtxt("data/Boulder_Data_bin.txt")[:, 1] * (1.565*10**(-6))
time_stamps_data = []
time_julian = []
for i in data_time:
    dt = datetime.fromtimestamp(i) + timedelta(hours=4)
    time_stamps_data.append(dt)
    time_julian.append((Time(dt)).jd)

vb, warnings, flag = get_BC_vel(JDUTC=time_julian, lat=39.995380 , longi=-105.262390 , alt=165.23, SolSystemTarget='Sun', predictive=False,zmeas=0.0)

data_rv = np.array(data_rv)
data_rv -= data_rv[-1]

GRASS_rv = np.array(GRASS_rv + vb)
GRASS_rv -= GRASS_rv[-1]

GRASS_no_cb = np.array(GRASS_no_cb + vb)
GRASS_no_cb -= GRASS_no_cb[-1]

RV_list_no_cb = np.array(RV_list_no_cb + vb)
RV_list_no_cb -= RV_list_no_cb[-1]

RV_list_cb = np.array(RV_list_cb + vb)
RV_list_cb -= RV_list_cb[-1]

#rm curve 
fig, axs = plt.subplots(2, sharex=True, sharey=False, gridspec_kw={'hspace': 0, 'height_ratios': [3, 1]})
axs[0].scatter(time_stamps_data[47:-20], data_rv[47:-20], color = 'k', marker = "x", s = 18, label = "Heterodyne RVs") 
axs[0].plot(time_stamps_data[47:-20], RV_list_no_cb[47:-20], color = 'r', linewidth = 2, label = "Weighted RVs - No CB")
axs[0].plot(time_stamps_data[47:-20], GRASS_no_cb[47:-20], color = 'b', linewidth = 3, label = "Line RVs - No CB")
axs[0].xaxis.set_major_formatter(mdates.DateFormatter("%H:%M"))
axs[0].set_xlabel("Time (UTC)", fontsize=12)
axs[0].set_ylabel("RV [m/s]", fontsize=12)
rms_model_no_cb = round(np.sqrt((np.nansum((data_rv[47:-20] - RV_list_no_cb[47:-20])**2))/len(data_rv[47:-20] - RV_list_no_cb[47:-20])),2)
axs[0].text(time_stamps_data[47:-20][-38], -400, "Weighted RVs - No CB RMS {}".format(rms_model_no_cb))
rms_grass_no_cb = round(np.sqrt((np.nansum((data_rv[47:-20] - GRASS_no_cb[47:-20])**2))/len(data_rv[47:-20] - GRASS_no_cb[47:-20])),2)
axs[0].text(time_stamps_data[47:-20][-38], -500, "Line RVs - No CB RMS {}".format(rms_grass_no_cb))
axs[0].legend(fontsize=12)
plt.xticks(fontsize=12)
plt.yticks(fontsize=12)
#residuals
axs[1].scatter(time_stamps_data[47:-20], (data_rv[47:-20]) - RV_list_no_cb[47:-20], color = 'r', marker = "x", s = 3) 
axs[1].scatter(time_stamps_data[47:-20], (data_rv[47:-20]) - GRASS_no_cb[47:-20], color = 'b', marker = "x", s = 3)  
axs[1].xaxis.set_major_formatter(mdates.DateFormatter("%H:%M"))
axs[1].set_xlabel("Time (UTC)", fontsize=12)
axs[1].set_ylabel("Residuals", fontsize=12) 
plt.xticks(fontsize=12)
plt.yticks(fontsize=12)
plt.savefig("rm_and_residuals.png")
plt.show()

#rm curve 
fig, axs = plt.subplots(2, sharex=True, sharey=False, gridspec_kw={'hspace': 0, 'height_ratios': [3, 1]})
axs[0].scatter(time_stamps_data[47:-20], data_rv[47:-20], color = 'k', marker = "x", s = 18, label = "Heterodyne RVs") 
axs[0].plot(time_stamps_data[47:-20], RV_list_cb[47:-20], color = 'r', linewidth = 3, label = "Weighted RVs - CB")
axs[0].plot(time_stamps_data[47:-20], GRASS_rv[47:-20], color = 'b', linewidth = 3, label = "GRASS")
axs[0].xaxis.set_major_formatter(mdates.DateFormatter("%H:%M"))
axs[0].set_xlabel("Time (UTC)", fontsize=12)
axs[0].set_ylabel("RV [m/s]", fontsize=12)
rms_model_cb = round(np.sqrt((np.nansum((data_rv[47:-20] - RV_list_cb[47:-20])**2))/len(data_rv[47:-20] - RV_list_cb[47:-20])),2)
axs[0].text(time_stamps_data[47:-20][-38], -400, "Weighted RVs - CB RMS {}".format(rms_model_cb))
rms_grass_no_cb = round(np.sqrt((np.nansum((data_rv[47:-20] - GRASS_rv[47:-20])**2))/len(data_rv[47:-20] - GRASS_rv[47:-20])),2)
axs[0].text(time_stamps_data[47:-20][-38], -500, "GRASS RMS {}".format(rms_grass_no_cb))
axs[0].legend(fontsize=12)
plt.xticks(fontsize=12)
plt.yticks(fontsize=12)
#residuals
axs[1].scatter(time_stamps_data[47:-20], (data_rv[47:-20]) - RV_list_cb[47:-20], color = 'k', marker = "x", s = 3) 
axs[1].scatter(time_stamps_data[47:-20], (data_rv[47:-20]) - GRASS_rv[47:-20], color = 'b', marker = "x", s = 3)  
axs[1].xaxis.set_major_formatter(mdates.DateFormatter("%H:%M"))
axs[1].set_xlabel("Time (UTC)", fontsize=12)
axs[1].set_ylabel("Residuals", fontsize=12) 
plt.xticks(fontsize=12)
plt.yticks(fontsize=12)
plt.savefig("rm_and_residuals_cb.png")
plt.show()