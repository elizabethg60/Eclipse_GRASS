import h5py
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
mpl = plt.matplotlib 
import matplotlib.dates as mdates
from datetime import datetime, timedelta

#read in data
#model
file = h5py.File("model_data.jld2", "r")
RV_list_no_cb = file["RV_list_no_cb"][()]
RV_list_cb  = file["RV_list_cb"][()]
intensity_list = file["intensity_list"][()]
RA_list = file["RA_list"][()]
dec_list = file["dec_list"][()]
vel_no_cb = file["vel_no_cb"][()]
vel_cb = file["vel_cb"][()]
#data 
data = pd.read_csv("NEID_Data.csv")
rv_obs = list(data["ccfrvmod"][15:-150]*1000 + 644.9)
UTC_time = []
for i in data["obsdate"][15:-150]:
    UTC_time.append(datetime.strptime(i, "%Y-%m-%d %H:%M:%S") + timedelta(seconds=27.5))

rv_obs = np.array(rv_obs)
rv_obs -= rv_obs[-1]

RV_list_no_cb = np.array(RV_list_no_cb)
RV_list_no_cb -= RV_list_no_cb[-1]

RV_list_cb = np.array(RV_list_cb)
RV_list_cb -= RV_list_cb[-1]

# i_test = [0.7621616006937255, 0.7536237434124804, 0.7436866800547126, 0.7333522440737443, 0.7230911013106608, 0.7124535385000387, 0.7002798816573841, 0.6902965247815487, 0.6780699557040585, 0.6649837605340669, 0.6526853303170339, 0.6405523035191203, 0.6274234634135301, 0.6138024889242844, 0.5992578652413358, 0.5852336986242781, 0.573111281217276, 0.5580872425351495, 0.5425093658770861, 0.5287351810426228, 0.5140132384522609, 0.5008324792641449, 0.48330537695261894, 0.4708364822299052, 0.45433917979798244, 0.4403305240354035, 0.42435237906514983, 0.40771949593046125, 0.393824149897315, 0.378050288163407, 0.3638670769790711, 0.3498710496723241, 0.3347704562547709, 0.3205092705742366, 0.3048593941244667, 0.2917754007955442, 0.2777322882464363, 0.2662360565501445, 0.25216580096486374, 0.240065893936107, 0.22937580894234916, 0.21938484371346584, 0.20782581816879622, 0.19916997645704643, 0.19295784404702115, 0.18546209680889567, 0.18091219818369395, 0.176700429466978, 0.17458226646369301, 0.17377543257296355, 0.17539588716244536, 0.17740701437362555, 0.18247936356771802, 0.18815226513895586, 0.19354594604031797, 0.20258816960706397, 0.21219652711273002, 0.22098693748961173, 0.23161074373531831, 0.24296870910902943, 0.2549660968116495, 0.2676403585822556, 0.27902663437605496, 0.2909580726931047, 0.30513718296600234, 0.3190506179203929, 0.3313504415500476, 0.3451656983853142, 0.359134376008731, 0.3737462605568167, 0.38583066713812453, 0.40061073668002045, 0.41495495007303523, 0.42774121977673885, 0.44205318611104283, 0.45639668326203087, 0.4691625830361685, 0.4830137467332027, 0.49699809179047433, 0.5096664851249156, 0.5235074427128278, 0.5365047407253428, 0.549131662237335, 0.5622489543262481, 0.5746787677393377, 0.5862011365652235, 0.5993306243333637, 0.612386966353848, 0.6241598256963976, 0.6338961722283196, 0.6463731585441748, 0.6578627216938667, 0.6671822241701858, 0.6791079702587978, 0.6896812740230293, 0.6983653428801385, 0.7081461387782876, 0.7176584198250819, 0.7271035620491719, 0.7350068754884863, 0.7429772401847254, 0.7516540965814957, 0.7595606710908813, 0.7668080247034261, 0.7736639579946722, 0.7794659616226125, 0.7851112474200149, 0.790491958126251, 0.7954715888114212, 0.8001462663723222, 0.8041719996376437, 0.8071921056700091, 0.8098113785322513, 0.8119194382359649, 0.8131877993711836, 0.8134778062091751, 0.8134778970585129, 0.8134778817502698, 0.8134779406766323, 0.8134778827736178, 0.8134778093880186, 0.8134780259161574, 0.8134779056099779, 0.813477853077562, 0.8134779652195202, 0.8134779112516661, 0.8134778227233848, 0.8134777055812581, 0.813477729696014, 0.813477638343187, 0.813477617861441, 0.813477583045884, 0.8134776712829129, 0.8134777493089199, 0.813477617439224, 0.8134775654814075, 0.8134777504919505, 0.8134778334604081, 0.8134779756845537, 0.8134779370126767, 0.8134779731501282, 0.8134781147735411, 0.8134783330434123, 0.8134786096880678, 0.8134785519476236, 0.8134787325382656, 0.8134789658697207, 0.8134790494106751, 0.8134792100482319, 0.8134794770121627, 0.8134795887731624, 0.8134796837880954, 0.8134797309070345, 0.8134799823837207, 0.8134802302917449, 0.813480230580797, 0.8134801434605612, 0.8134802413777829]
# rv_test = [-93.90759447420943, -108.3846649021083, -124.0103082288739, -139.829370689344, -155.66770518415532, -172.68814162223316, -189.70993466879705, -208.31258611043174, -225.02176553992348, -242.82527300210862, -260.1464787080055, -278.45714040025865, -298.1078805005118, -316.7088675079757, -333.6047756429494, -353.8357673240881, -371.1901486890035, -387.9940288143938, -408.53377565294005, -425.6410768222996, -442.2978254200608, -460.5379222617725, -476.34832343745626, -493.17098239139636, -507.56063348631204, -521.7890655642119, -535.532562216021, -547.2008624623799, -557.6927117973023, -566.4420533906858, -575.8954062713791, -583.4064110487058, -585.1822884290623, -584.7519059269372, -577.7587177065889, -569.220120575946, -559.6442390903904, -544.6986685923515, -520.2611180865455, -485.8098643208675, -447.35124192007396, -404.15215344502803, -344.8854776219985, -275.519908432341, -193.27579773633298, -103.85016031244119, 1.7863809195661335, 112.03792531063269, 214.8035935913527, 323.13485571109436, 426.62469403563153, 517.4740635132706, 608.9058103132426, 673.858005882469, 730.2514784507034, 779.2677560767643, 809.6539330190786, 828.8295244143679, 849.8788870981322, 851.4539229158972, 857.9712918469883, 851.8162147164359, 849.2230888103253, 838.021492013764, 825.5107848575961, 811.6933410305495, 797.5394824883695, 779.8445918213629, 763.3690294652034, 745.2558305848627, 726.465009267955, 704.9854944807585, 683.9755421092801, 665.0479984369052, 644.0183779239828, 620.2676926277522, 601.4899926619979, 579.6022807200052, 559.2864393625782, 539.7324326268104, 514.1734331474611, 497.01371979514727, 473.55904384507556, 453.8339100274558, 431.7897280527906, 412.912444316936, 388.6437946910273, 372.3561748179798, 351.34637127716786, 331.0151276729855, 314.5857803153121, 293.9309370096041, 274.68077704657395, 255.87485145342117, 237.45251917714725, 221.70911080974946, 203.9498750382657, 187.66466830762187, 172.679353727399, 155.15329894192604, 138.57070942542006, 123.81895194089383, 110.65849148544429, 96.91953491036685, 83.8873695468058, 71.0277449318332, 60.12504922478072, 47.99196661480336, 38.163446862360374, 28.831075214855506, 20.56375386940976, 13.980071321571687, 8.197916981090177, 3.4981793354758057, 0.6372424401229397, 0.0004147911340061635, 0.0008276545648147118, 0.0011019376698290578, 0.0011302857734845945, 0.0012274891296976476, 0.0009953064711431354, 0.000859479099266732, 0.0010566565965719214, 0.001286188920256821, 0.0010703180788829154, 0.0009288034159243287, 0.0007646771761178435, 0.0006995050605117846, 0.0005704512626509497, 0.0006885499617455713, 0.0003160203944528346, 0.00014180403183912851, 8.696772736130774e-6, -0.0002856239196060666, -0.0002455274006869693, -0.000259183057726971, -0.0005516161795179083, -0.0005270395652640867, -0.0008007443676305349, -0.0007769474387565065, -0.0007966510544774062, -0.00060854504241263, -0.0006664745161851378, -0.0008000101995024192, -0.0008461184872387024, -0.0006857473902794838, -0.0005232241082303607, -0.00018649089543029215, -4.5110979375590704e-5, 3.1741453311932655e-5, 1.1776243339275564e-5, 0.00032602860632684915, 0.00041578414080710023, 0.0006531692978336883, 0.0006528642297460514, 0.0008617953980509131, 0.0009072651472258896, 0.0010079802596960083]

#rm curve 
fig, axs = plt.subplots(2, sharex=True, sharey=False, gridspec_kw={'hspace': 0, 'height_ratios': [3, 1]})
axs[0].scatter(UTC_time, rv_obs, color = 'k', marker = "x", s = 15, label = "NEID RVs") 
axs[0].plot(UTC_time, RV_list_no_cb, color = 'r', label = "Model - No CB")
#axs[0].plot(UTC_time, rv_test, color = 'g', label = "GRASS")
axs[0].plot(UTC_time, RV_list_cb, color = 'g', label = "Model - CB")
axs[0].xaxis.set_major_formatter(mdates.DateFormatter("%H:%M"))
axs[0].set_xlabel("Time (UTC)")
axs[0].set_ylabel("RV [m/s]")
axs[0].legend()
#residuals
axs[1].scatter(UTC_time, (rv_obs) - RV_list_no_cb, color = 'r', marker = "x", s = 1) 
#axs[1].scatter(UTC_time, (rv_obs) - rv_test, color = 'g', marker = "x", s = 1)  
axs[1].scatter(UTC_time, (rv_obs) - RV_list_cb, color = 'g', marker = "x", s = 1)  
axs[1].xaxis.set_major_formatter(mdates.DateFormatter("%H:%M"))
axs[1].set_xlabel("Time (UTC)")
axs[1].set_ylabel("Residuals") 
plt.savefig("rm_and_residuals.png")
plt.show()

#intensity
fig = plt.figure()
ax1 = fig.add_subplot()
ax1.scatter(UTC_time, intensity_list, label = "Model") 
#ax1.scatter(UTC_time, i_test, color = 'g', label = "GRASS")  
ax1.xaxis.set_major_formatter(mdates.DateFormatter("%H:%M"))
ax1.set_xlabel("Time (UTC)")
ax1.set_ylabel("Relative Intensity") 
#plt.legend()
plt.savefig("intensity.png")
plt.show()

# #projected solar velocities at each timestamp for eclipse movie
# for i in range(1,len(vel_no_cb)):
#     vel = file[vel_no_cb[i]][()]
#     ra = file[RA_list[i]][()]
#     dec = file[dec_list[i]][()]

#     cnorm = mpl.colors.Normalize(np.min(vel), np.max(vel))
#     colors = mpl.cm.seismic(cnorm(vel))
#     pcm = plt.pcolormesh(ra, dec, vel, cmap="seismic",vmin=-2000, vmax=2000)
#     cb = plt.colorbar(pcm, norm=cnorm, ax=plt.gca())
#     plt.gca().invert_xaxis()
#     cb.set_label("projected velocity (m/s)")
#     plt.xlabel("RA")
#     plt.ylabel("dec")
#     plt.savefig("movie/projected_vel_{}.png".format(i))
#     plt.clf()