import h5py
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
mpl = plt.matplotlib 
import matplotlib.dates as mdates
from datetime import datetime, timedelta

#read in data
#model
file = h5py.File("model_data.jld2", "r")
RV_list_no_cb = file["RV_list_no_cb"][()]
RV_list_cb  = file["RV_list_cb"][()]
intensity_list = file["intensity_list"][()]
RA_list = file["RA_list"][()]
dec_list = file["dec_list"][()]
vel_no_cb = file["vel_no_cb"][()]
vel_cb = file["vel_cb"][()]
#data 
data = pd.read_csv("NEID_Data.csv")
rv_obs = list(data["ccfrvmod"][15:-150]*1000 + 644.9)
UTC_time = []
for i in data["obsdate"][15:-150]:
    UTC_time.append(datetime.strptime(i, "%Y-%m-%d %H:%M:%S") + timedelta(seconds=27.5))

rv_obs = np.array(rv_obs)
rv_obs -= rv_obs[-1]

RV_list_no_cb = np.array(RV_list_no_cb)
RV_list_no_cb -= RV_list_no_cb[-1]

RV_list_cb = np.array(RV_list_cb)
RV_list_cb -= RV_list_cb[-1]

# i_test = [0.7651241864160845, 0.757476671653532, 0.7473351493803877, 0.7369420525241431, 0.7282301906416365, 0.7174432370341963, 0.706727098920969, 0.6962170644332228, 0.6837785062545528, 0.6709021652796893, 0.6585561076057276, 0.6467831417639166, 0.6324520122769066, 0.6180611100235701, 0.6062382317406746, 0.5917326184789098, 0.5796580803317342, 0.5661037646004741, 0.5498995829404806, 0.534654478620048, 0.5208101628621593, 0.502982584354755, 0.4952127149227061, 0.4775107982739657, 0.4626935271127195, 0.4478749793991191, 0.431473265555616, 0.41805438525226896, 0.40059149048850407, 0.38956606153525036, 0.37278551695255235, 0.3542192344780749, 0.34591218120958445, 0.3291132729357469, 0.3138510319563455, 0.30053472540382303, 0.28729448652621337, 0.2731552944298559, 0.2635683279024066, 0.24737608903503336, 0.2369261415020143, 0.22568011760156867, 0.21629003524950555, 0.20937759538520614, 0.20269798073319578, 0.19548286778797133, 0.18784567404239513, 0.18523707776443712, 0.18317286995569337, 0.1815278108386619, 0.18452607587992326, 0.1855861928393085, 0.1892952809977093, 0.1963050987458089, 0.2032230748369776, 0.211426065788951, 0.21805906394132132, 0.22760248652629386, 0.23966809848747714, 0.25090843718930367, 0.261118558980789, 0.2739152011328847, 0.28498212035545045, 0.30215004250956085, 0.3105598522553755, 0.3267858814825671, 0.3385940177336193, 0.3544204953081135, 0.365623333462844, 0.3822361983904782, 0.39237738757288726, 0.4097131377851904, 0.4224493774235658, 0.43965389018206663, 0.45125097790102403, 0.46332245462679983, 0.475745503529572, 0.4908672709898279, 0.50545811751329, 0.5161569512986538, 0.5280091010972224, 0.5481515192869675, 0.557040065065835, 0.5744005763934709, 0.5824451572925158, 0.5957684368773023, 0.608261393617618, 0.6177258710199861, 0.6309443872326671, 0.6417546311164513, 0.6536356027312537, 0.6633598291054961, 0.6746166842977782, 0.6843244024668311, 0.6949370538330258, 0.7044873972279544, 0.7155079544349707, 0.7217883069106766, 0.7330285153920796, 0.739456209965824, 0.7474272984510998, 0.7556545010575687, 0.7620306221574551, 0.7690854237254072, 0.7756811448273613, 0.7830481842949651, 0.7873783053564939, 0.7925482395049834, 0.7972898360795019, 0.8012941526653584, 0.8044265065200702, 0.8077982925389428, 0.810189593590666, 0.8121469536141129, 0.8130922246078609, 0.813256443595014, 0.8132564540839756, 0.8132564922989062, 0.8132565136370429, 0.8132565394216821, 0.8132565816220605, 0.8132566131981571, 0.8132566144511131, 0.8132566554620411, 0.8132566671936091, 0.8132567092695906, 0.8132567245287339, 0.8132567733815214, 0.8132568003546913, 0.813256825403483, 0.8132568514003768, 0.8132568689349264, 0.8132569132219098, 0.8132569336101237, 0.8132569408083878, 0.8132569800804593, 0.8132569935523299, 0.813256976469011, 0.8132569904774247, 0.8132570081815328, 0.8132570071874798, 0.8132570060398122, 0.8132570289842724, 0.8132570558055733, 0.8132570751724859, 0.8132570836042695, 0.8132571099889611, 0.8132571135553631, 0.8132571330832729, 0.8132571777966815, 0.81325716686038, 0.8132571707668615, 0.8132571942261388, 0.8132571959359707, 0.8132571811076561, 0.8132571773096416, 0.8132572003252373, 0.8132572240500748]
# rv_test = [-87.84653014226636, -100.8392668616794, -117.61189060413311, -134.1863239733167, -147.62081563781388, -165.06565226940418, -181.55787896701352, -197.83905836248618, -216.3068102283982, -234.9950056931398, -252.4818468495722, -270.14722667552013, -289.9997640354346, -310.27779217356317, -326.25233901494886, -344.4257514560441, -359.7673527251467, -377.7646541879646, -399.83712635549347, -415.70845063695475, -433.217913574607, -455.2829256350095, -461.48032856529176, -480.73347048790157, -499.5215504849097, -513.0243462724756, -524.329803901525, -537.3484490428522, -544.2452711456823, -551.0892582877693, -564.2209219202822, -574.0587006304324, -577.9756717396066, -576.4841382943347, -575.1463383073926, -570.0856040811924, -551.3444957624208, -536.2605829503767, -512.3063563949376, -483.182378811006, -446.125979106056, -389.7603877578849, -339.75979398998686, -269.5259837029153, -188.07619901679055, -98.75408555649781, 0.9271021566268138, 102.75792145896804, 214.3339755422571, 312.4441874418596, 414.3634417633643, 512.2524016060177, 604.3190421452134, 668.3634008958577, 713.1457445926411, 764.4361720047244, 799.4030334960173, 823.4330733658785, 833.4294605011231, 843.2853204866702, 845.7352622028999, 841.4691597446026, 835.6369512121059, 822.0091108428887, 814.350107033067, 797.4932950942068, 786.164933850897, 765.3517123791779, 750.51875731854, 730.2194969744608, 715.0297681239543, 691.383098935215, 670.6187226749836, 647.8467687014545, 628.8209418674656, 610.3599677945996, 590.7152254941517, 567.6370066597076, 544.2053989625833, 529.3051493737283, 507.8184423452638, 477.6907189802582, 462.51269427265834, 435.2052800583481, 420.48582423310046, 399.9572759340376, 378.19079653645747, 361.80064705259434, 340.25791921804193, 321.13535455877525, 301.9345341094706, 284.36819370553684, 264.93428281535967, 247.72619986053135, 229.09919174646495, 211.78833192864604, 192.4106217320225, 180.465489323529, 160.21015799561812, 147.94986391846575, 133.22330403988093, 117.48717837301011, 105.13215264882227, 91.51484578068205, 78.51952956420216, 64.03621248877339, 55.05441617390129, 44.5258318015237, 34.71465272028896, 26.269173312746766, 19.538151764029767, 12.209857972902649, 6.9453363447255665, 2.546480697832745, 0.38292270461816985, -0.0003892467424972363, -6.078511898280941e-5, -0.0003432782432573525, -0.00026233724378488157, -8.355024097881131e-5, -0.00026952685134480533, -0.0004336748440221484, -4.8380739043721e-5, -0.00022236788732173403, -0.00023306186769905276, -0.0002644072665401513, -0.000284455867789415, -0.00035037336266866774, -0.0002662693132693523, -0.00018680280254992145, -0.00022875042337514723, -0.0001113811658110359, -7.765747810952606e-5, -5.593686234348888e-6, -0.000149061383698199, -0.00011699940721562026, 0.00010812500174714995, -0.00010008405808110834, 2.6986320817053826e-5, 2.666768044771741e-5, -0.00014094039017729365, -8.126342889958728e-5, -7.669560262618231e-5, -8.723686389428459e-5, -0.0003072942542885108, -0.00012571295136551978, -0.00010555278455023766, -0.00017478194713694867, -0.0002000197038916098, -0.00018675217802274142, -0.00016771516560401987, -0.00023401568466511916, -6.17167953322995e-5, -0.0001415645672417568, -0.0003142788567402073, -0.00022845125574339704, -0.00010348109651962738, -0.00041518556875704823]

#rm curve 
fig, axs = plt.subplots(2, sharex=True, sharey=False, gridspec_kw={'hspace': 0, 'height_ratios': [3, 1]})
axs[0].scatter(UTC_time, rv_obs, color = 'k', marker = "x", s = 15, label = "NEID RVs") 
axs[0].plot(UTC_time, RV_list_no_cb, color = 'r', label = "Model - No CB")
#axs[0].plot(UTC_time, rv_test, color = 'g', label = "GRASS")
axs[0].plot(UTC_time, RV_list_cb, color = 'g', label = "Model - CB")
axs[0].xaxis.set_major_formatter(mdates.DateFormatter("%H:%M"))
axs[0].set_xlabel("Time (UTC)")
axs[0].set_ylabel("RV [m/s]")
axs[0].legend()
#residuals
axs[1].scatter(UTC_time, (rv_obs) - RV_list_no_cb, color = 'r', marker = "x", s = 1) 
#axs[1].scatter(UTC_time, (rv_obs) - rv_test, color = 'g', marker = "x", s = 1)  
axs[1].scatter(UTC_time, (rv_obs) - RV_list_cb, color = 'g', marker = "x", s = 1)  
axs[1].xaxis.set_major_formatter(mdates.DateFormatter("%H:%M"))
axs[1].set_xlabel("Time (UTC)")
axs[1].set_ylabel("Residuals") 
plt.savefig("rm_and_residuals.png")
plt.show()

#intensity
fig = plt.figure()
ax1 = fig.add_subplot()
ax1.scatter(UTC_time, intensity_list, label = "Model") 
#ax1.scatter(UTC_time, i_test, color = 'g', label = "GRASS")  
ax1.xaxis.set_major_formatter(mdates.DateFormatter("%H:%M"))
ax1.set_xlabel("Time (UTC)")
ax1.set_ylabel("Relative Intensity") 
#plt.legend()
plt.savefig("intensity.png")
plt.show()

# #projected solar velocities at each timestamp for eclipse movie
# for i in range(1,len(vel_no_cb)):
#     vel = file[vel_no_cb[i]][()]
#     ra = file[RA_list[i]][()]
#     dec = file[dec_list[i]][()]

#     cnorm = mpl.colors.Normalize(np.min(vel), np.max(vel))
#     colors = mpl.cm.seismic(cnorm(vel))
#     pcm = plt.pcolormesh(ra, dec, vel, cmap="seismic",vmin=-2000, vmax=2000)
#     cb = plt.colorbar(pcm, norm=cnorm, ax=plt.gca())
#     plt.gca().invert_xaxis()
#     cb.set_label("projected velocity (m/s)")
#     plt.xlabel("RA")
#     plt.ylabel("dec")
#     plt.savefig("movie/projected_vel_{}.png".format(i))
#     plt.clf()